From 1e3303b4ae3c2c280a965d382e2633ef0e107fc3 Mon Sep 17 00:00:00 2001
From: Alexander Morozov <lk4d4@docker.com>
Date: Tue, 29 Mar 2016 13:52:18 -0700
Subject: [PATCH 7/8] daemon: register container as late as possible

fixes races between list and create

Signed-off-by: Alexander Morozov <lk4d4@docker.com>
Upstream-Status: Backport
Signed-off-by: Petros Angelatos <petrosagg@gmail.com>
---
 daemon/create.go | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/daemon/create.go b/daemon/create.go
index 166af3b..2ba0d5b 100644
--- a/daemon/create.go
+++ b/daemon/create.go
@@ -73,8 +73,8 @@ func (daemon *Daemon) create(params types.ContainerCreateConfig) (retC *containe
 	}
 	defer func() {
 		if retErr != nil {
-			if err := daemon.ContainerRm(container.ID, &types.ContainerRmConfig{ForceRemove: true}); err != nil {
-				logrus.Errorf("Clean up Error! Cannot destroy container %s: %v", container.ID, err)
+			if err := daemon.cleanupContainer(container, true); err != nil {
+				logrus.Errorf("failed to cleanup container on create error: %v", err)
 			}
 		}
 	}()
@@ -88,9 +88,6 @@ func (daemon *Daemon) create(params types.ContainerCreateConfig) (retC *containe
 		return nil, err
 	}
 
-	if err := daemon.Register(container); err != nil {
-		return nil, err
-	}
 	rootUID, rootGID, err := idtools.GetRootUIDGID(daemon.uidMaps, daemon.gidMaps)
 	if err != nil {
 		return nil, err
@@ -123,10 +120,13 @@ func (daemon *Daemon) create(params types.ContainerCreateConfig) (retC *containe
 		return nil, err
 	}
 
-	if err := container.ToDiskLocking(); err != nil {
+	if err := container.ToDisk(); err != nil {
 		logrus.Errorf("Error saving new container to disk: %v", err)
 		return nil, err
 	}
+	if err := daemon.Register(container); err != nil {
+		return nil, err
+	}
 	daemon.LogContainerEvent(container, "create")
 	return container, nil
 }
-- 
2.10.2

